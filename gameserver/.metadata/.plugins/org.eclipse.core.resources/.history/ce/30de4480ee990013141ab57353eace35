package dependencies;

import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

import AbstractObjects.Entities;

public class QuadTree {

	private final static int  maxObjects = 10;
	private final static int maxDepth = 5;
	
	private int level;
	private List<Entities> objects;
	
	//bounds
	private int originX;
	private int originY;
	private int dimension;
	 
	//nodes
	private QuadTree topLeft;
	private QuadTree topRight;
	private QuadTree bottomLeft;
	private QuadTree bottomRight;

	//constructor
	public QuadTree(int pLevel,int newX,int newY,int newDimension) 
	{
		level = pLevel;
		objects = new ArrayList();
		originX = newX;
		originY = newY;
		dimension = newDimension;
	}
	
	private void split()
	{
		int di = dimension>>1;
		topLeft = new QuadTree(level+1, originX, originY, dimension);
		topRight = new QuadTree(level+1, originX+di, originY,dimension);
		bottomLeft = new QuadTree(level+1, originX, originY+di, dimension);
		bottomRight = new QuadTree(level+1, originX+di, originY+di, dimension);	
	}
	private boolean insert(Entities object)
	{
		if(objects.size() < maxObjects)
		{
			objects.add(object);
			return true;
		}
		else
		{
			if(topLeft == null && level < maxDepth)
				split();
			if(topLeft == null)
				return false;
			//check if left quadrant
			if(object.x < originX+dimension>>1)
			{
				if(object.y < originY+dimension>>1)
					return topLeft.insert(object);
				else if(object.y > originY+dimension>>1)
					return bottomLeft.insert(object);
			}
			else if(object.x > originX+dimension>>1)
			{
				if(object.y < originY+dimension>>1)
					return topRight.insert(object);
				else if(object.y > originY+dimension>>1)
					return bottomRight.insert(object);
			}
			return false;
		}	
	}
	
}
