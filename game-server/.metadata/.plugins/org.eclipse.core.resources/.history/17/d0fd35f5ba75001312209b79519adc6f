package gameEntities;

public class Player {
	
	public int maxHealth = 100;
	public int health;
	public String userName;
	public String IPAddress;

	public boolean isShooting;
	public boolean isFalling;
	public boolean isJumping;
	
	//movement state
	public boolean leftKeyPress;
	public boolean rightKeyPress;
	
	//Dimensions
	private int width = 30;
	private int height = 30;
	private int collisionWidth = 20;
	private int collisionHeight = 20;
	
	//moving statistics
	private float moveSpeed = 0.3f;
	private float maxSpeed = 1.6f;
	private float stopSpeed = 0.4f;
	private float fallSpeed = 0.15f;
	private float maxFallSpeed = 4.0f;
	private float jumpStart = -4.8f;
	private float stopJumpSpeed = 0.3f;
	
	// position and vector
	protected double x;
	protected double y;
	protected double dx;
	protected double dy;
	
	//constructor
	public Player()
	{
		health = maxHealth;
	}
	public void hit(int damage)
	{
		health -= damage;
	}

	//no collision detection here
	private void getNextPosition() {
		// movement (horizontal)
		if(leftKeyPress) {
			dx -= moveSpeed;
			if(dx < -maxSpeed) 
			{
				dx = -maxSpeed;
			}
		}
		else if(rightKeyPress) 
		{
			dx += moveSpeed;
			if(dx > maxSpeed) 
			{
				dx = maxSpeed;
			}
		}
		else {
			if(dx > 0) 
			{
				dx -= stopSpeed;
				if(dx < 0) 
				{
					dx = 0;
				}
			}
			else if(dx < 0) 
			{
				dx += stopSpeed;
				if(dx > 0) 
				{
					dx = 0;
				}
			}
		}
		// jumping (vertical)
		if(isJumping && !isFalling) 
		{
			dy = jumpStart;
			isFalling = true;
		}		
		// falling
		if(isFalling) {
			dy += fallSpeed;
			if(dy > 0) 
			{
				isJumping = false;
			}
			if(dy < 0 && !isJumping)
			{
				dy += stopJumpSpeed;
			}
			if(dy > maxFallSpeed) 
			{
				dy = maxFallSpeed;
			}			
		}	
	}
	//end of getnextpos
	//now need to run collision detection
}
